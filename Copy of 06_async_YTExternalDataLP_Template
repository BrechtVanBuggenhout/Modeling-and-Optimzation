{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1H_M82wYNsa32LPFa8FRACnKBrruW7Wlg","timestamp":1668458668990},{"file_id":"19xh7d-bvkAnCm5dhpIKE8dNVz5jr-eRb","timestamp":1668183666785},{"file_id":"1lSjbOUunyT2r2qYP4P1GpD0jTsqlYXIs","timestamp":1667945379499},{"file_id":"1DYhe4gRIu70xz4hRCBriIkSZHnDmpWpn","timestamp":1667869907360},{"file_id":"1ROGTgq0XazLGz18s6xi8bReQturDlYgE","timestamp":1667415691220}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Set-Up"],"metadata":{"id":"hL77L3Uei59o"}},{"cell_type":"code","source":["#Copy-and-paste the code below to use as \"set-up\" when your optimization model uses Pyomo. \n","#Uncomment the appropriate solver that you need.\n","#for reference, see https://colab.research.google.com/drive/1yGk8RB5NXrcx9f1Tb-oCiWzbxh61hZLI?usp=sharing\n","\n","#installing and importing pyomo\n","!pip install -q pyomo\n","from pyomo.environ import *\n","\n","###installing and importing specific solvers (uncomment the one(s) you need)\n","###glpk\n","!apt-get install -y -qq glpk-utils\n","###cbc\n","#!apt-get install -y -qq coinor-cbc\n","###ipopt\n","#!wget -N -q \"https://ampl.com/dl/open/ipopt/ipopt-linux64.zip\"\n","#!unzip -o -q ipopt-linux64\n","###bonmin\n","#!wget -N -q \"https://ampl.com/dl/open/bonmin/bonmin-linux64.zip\"\n","#!unzip -o -q bonmin-linux64\n","###couenne\n","#!wget -N -q \"https://ampl.com/dl/open/couenne/couenne-linux64.zip\"\n","#!unzip -o -q couenne-linux64\n","###geocode\n","#!wget -N -q \"https://ampl.com/dl/open/gecode/gecode-linux64.zip\"\n","#!unzip -o -q gecode-linux64\n","\n","#Using the solvers:\n","#SolverFactory('glpk', executable='/usr/bin/glpsol')\n","#SolverFactory('cbc', executable='/usr/bin/cbc')\n","#SolverFactory('ipopt', executable='/content/ipopt')\n","#SolverFactory('bonmin', executable='/content/bonmin')\n","#SolverFactory('couenne', executable='/content/couenne')\n","#SolverFactory('gecode', executable='/content/gecode')"],"metadata":{"id":"T3OEUrcJgiSR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668458725928,"user_tz":360,"elapsed":21123,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"021fa593-0307-4c0d-eac7-e7050d271ecd"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K     |████████████████████████████████| 9.7 MB 4.3 MB/s \n","\u001b[K     |████████████████████████████████| 49 kB 5.3 MB/s \n","\u001b[?25hSelecting previously unselected package libsuitesparseconfig5:amd64.\n","(Reading database ... 123942 files and directories currently installed.)\n","Preparing to unpack .../libsuitesparseconfig5_1%3a5.1.2-2_amd64.deb ...\n","Unpacking libsuitesparseconfig5:amd64 (1:5.1.2-2) ...\n","Selecting previously unselected package libamd2:amd64.\n","Preparing to unpack .../libamd2_1%3a5.1.2-2_amd64.deb ...\n","Unpacking libamd2:amd64 (1:5.1.2-2) ...\n","Selecting previously unselected package libcolamd2:amd64.\n","Preparing to unpack .../libcolamd2_1%3a5.1.2-2_amd64.deb ...\n","Unpacking libcolamd2:amd64 (1:5.1.2-2) ...\n","Selecting previously unselected package libglpk40:amd64.\n","Preparing to unpack .../libglpk40_4.65-1_amd64.deb ...\n","Unpacking libglpk40:amd64 (4.65-1) ...\n","Selecting previously unselected package glpk-utils.\n","Preparing to unpack .../glpk-utils_4.65-1_amd64.deb ...\n","Unpacking glpk-utils (4.65-1) ...\n","Setting up libsuitesparseconfig5:amd64 (1:5.1.2-2) ...\n","Setting up libcolamd2:amd64 (1:5.1.2-2) ...\n","Setting up libamd2:amd64 (1:5.1.2-2) ...\n","Setting up libglpk40:amd64 (4.65-1) ...\n","Setting up glpk-utils (4.65-1) ...\n","Processing triggers for libc-bin (2.27-3ubuntu1.6) ...\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n"]}]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"J4lPdDkN49x3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Q4 Template\n","I've helped you get started a little below"],"metadata":{"id":"S4MSAujT-Wj2"}},{"cell_type":"code","source":["#Q4 import constraint coefficient data\n","import pandas as pd\n","constraint_df = pd.read_excel(\"q4data.xlsx\", sheet_name = \"constraintdata\")\n","constraint_df"],"metadata":{"id":"gPvJ8gO9y7W4","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1668458900808,"user_tz":360,"elapsed":12,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"890e8735-cf49-4120-d506-723eb03d7bfb"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   coef_x1  coef_x2  coef_x3  coef_x4  coef_x5  constraint_rhs\n","0        3        2       -7        5        6              47\n","1        4       -8       -3        2        4              53\n","2       -3        4        6       -1        0              91"],"text/html":["\n","  <div id=\"df-2fdd51a1-3318-4fbd-9bd4-8e3853e8928f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>coef_x1</th>\n","      <th>coef_x2</th>\n","      <th>coef_x3</th>\n","      <th>coef_x4</th>\n","      <th>coef_x5</th>\n","      <th>constraint_rhs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>-7</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>-8</td>\n","      <td>-3</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-3</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>91</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fdd51a1-3318-4fbd-9bd4-8e3853e8928f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2fdd51a1-3318-4fbd-9bd4-8e3853e8928f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2fdd51a1-3318-4fbd-9bd4-8e3853e8928f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#Q4 import objective coefficient data\n","objective_df = pd.read_excel(\"q4data.xlsx\", sheet_name = \"objdata\")\n","objective_df "],"metadata":{"id":"jTgMo1ZbziYR","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1668458928459,"user_tz":360,"elapsed":316,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"ae1dc8d4-c935-429e-c92e-8f86cf9cdfff"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   coef_x1  coef_x2  coef_x3  coef_x4  coef_x5  obj_constant\n","0        6        4       -7        3        2             0"],"text/html":["\n","  <div id=\"df-5beb36c1-97c0-4e79-a6ea-569c8f4f446f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>coef_x1</th>\n","      <th>coef_x2</th>\n","      <th>coef_x3</th>\n","      <th>coef_x4</th>\n","      <th>coef_x5</th>\n","      <th>obj_constant</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>-7</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5beb36c1-97c0-4e79-a6ea-569c8f4f446f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5beb36c1-97c0-4e79-a6ea-569c8f4f446f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5beb36c1-97c0-4e79-a6ea-569c8f4f446f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df = objective_df.drop('obj_constant', axis=1)"],"metadata":{"id":"7cbCe0SLCXim","executionInfo":{"status":"ok","timestamp":1668461216341,"user_tz":360,"elapsed":414,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["#Q4 create list objects\n","\n","objects = [6,4,-7,3,2]\n","objects"],"metadata":{"id":"PD33uWk0zoG0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668461607706,"user_tz":360,"elapsed":5,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"09f31577-c4c0-482b-a5fa-c51c78dca454"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[6, 4, -7, 3, 2]"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["# list of constraints\n","constraints_coef = constraint_df.loc[:,\"coef_x1\":\"coef_x5\"].values.tolist()\n","constraints_coef"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RJmgK9Ug8tEI","executionInfo":{"status":"ok","timestamp":1668461225927,"user_tz":360,"elapsed":4,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"67ab7581-e41e-4801-c77d-b1d339d36430"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[3, 2, -7, 5, 6], [4, -8, -3, 2, 4], [-3, 4, 6, -1, 0]]"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["# constraints\n","constraint_rhs = constraint_df.loc[:,\"constraint_rhs\"].values.tolist()\n","constraint_rhs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mEdjT9ao9Xx7","executionInfo":{"status":"ok","timestamp":1668461226852,"user_tz":360,"elapsed":7,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"d8e42373-c90a-41d5-d9cb-ffb4042ebd0e"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[47, 53, 91]"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["num_objects = 1\n","num_constraints = 3"],"metadata":{"id":"wrAer4hT7sQe","executionInfo":{"status":"ok","timestamp":1668461228474,"user_tz":360,"elapsed":457,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["#Q5 create optimization problem\n","\n","#initialize a \"Concrete Model\"\n","model = ConcreteModel()\n","\n","#initialize DVs\n","model.x = Var(range(num_objects), domain = NonNegativeReals)\n","\n","#define the objective\n","model.Objective = Objective(expr = sum(objects[i]*model.x[i]for i in range(num_objects)), sense = minimize)\n","\n","#specify the constraints\n","model.constraints = ConstraintList()\n","for j in range(num_constraints):\n","  model.constraints.add(expr = sum(constraints_coef[i][j]*model.x[i] for i in range(num_objects)) >= constraint_rhs[j])\n","\n","#(Optional) You can use model.pprint() to see what you've done so far\n","model.pprint()"],"metadata":{"id":"s8fEpAZUBF18","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668461611705,"user_tz":360,"elapsed":261,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"d47c376e-a988-4299-98b0-d027a09c847d"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stdout","text":["2 Set Declarations\n","    constraints_index : Size=1, Index=None, Ordered=Insertion\n","        Key  : Dimen : Domain : Size : Members\n","        None :     1 :    Any :    3 : {1, 2, 3}\n","    x_index : Size=1, Index=None, Ordered=Insertion\n","        Key  : Dimen : Domain : Size : Members\n","        None :     1 :    Any :    1 :    {0,}\n","\n","1 Var Declarations\n","    x : Size=1, Index=x_index\n","        Key : Lower : Value : Upper : Fixed : Stale : Domain\n","          0 :     0 :  None :  None : False :  True : NonNegativeReals\n","\n","1 Objective Declarations\n","    Objective : Size=1, Index=None, Active=True\n","        Key  : Active : Sense    : Expression\n","        None :   True : minimize :     6*x[0]\n","\n","1 Constraint Declarations\n","    constraints : Size=3, Index=constraints_index, Active=True\n","        Key : Lower : Body    : Upper : Active\n","          1 :  47.0 :  3*x[0] :  +Inf :   True\n","          2 :  53.0 :  2*x[0] :  +Inf :   True\n","          3 :  91.0 : -7*x[0] :  +Inf :   True\n","\n","5 Declarations: x_index x Objective constraints_index constraints\n"]}]},{"cell_type":"code","source":["#Q5 solve model\n","opt = SolverFactory('glpk', executable='/usr/bin/glpsol')\n","\n","results = opt.solve(model, tee = True) "],"metadata":{"id":"h5eKJ85NBT3N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668461614919,"user_tz":360,"elapsed":294,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"10bf357d-7c15-422a-fda4-508c1d79fb28"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["GLPSOL: GLPK LP/MIP Solver, v4.65\n","Parameter(s) specified in the command line:\n"," --write /tmp/tmpsixj_jcf.glpk.raw --wglp /tmp/tmpx2r57ujh.glpk.glp --cpxlp\n"," /tmp/tmpurq_ri_9.pyomo.lp\n","Reading problem data from '/tmp/tmpurq_ri_9.pyomo.lp'...\n","4 rows, 2 columns, 4 non-zeros\n","26 lines were read\n","Writing problem data to '/tmp/tmpx2r57ujh.glpk.glp'...\n","18 lines were written\n","GLPK Simplex Optimizer, v4.65\n","4 rows, 2 columns, 4 non-zeros\n","Preprocessing...\n","PROBLEM HAS NO PRIMAL FEASIBLE SOLUTION\n","If you need actual output for non-optimal solution, use --nopresol\n","Time used:   0.0 secs\n","Memory used: 0.0 Mb (39693 bytes)\n","Writing basic solution to '/tmp/tmpsixj_jcf.glpk.raw'...\n","15 lines were written\n"]}]},{"cell_type":"code","source":["#Q5 print relevant results\n","\n","for i in range(num_constraints):\n","  if model.x[i] > 0:\n","    print(f\"x{i} = {model.x[i]()}\")"],"metadata":{"id":"Szsaeh-MBWqx","colab":{"base_uri":"https://localhost:8080/","height":454},"executionInfo":{"status":"error","timestamp":1668461617670,"user_tz":360,"elapsed":421,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"7a20ac2e-5b0b-42e5-be7b-0ea5fe3c1687"},"execution_count":98,"outputs":[{"output_type":"error","ename":"PyomoException","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mPyomoException\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-98-a3368e6cc1bb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_constraints\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0;32mif\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"x{i} = {model.x[i]()}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpyomo/core/expr/logical_expr.pyx\u001b[0m in \u001b[0;36mpyomo.core.expr.logical_expr.InequalityExpression.__bool__\u001b[0;34m()\u001b[0m\n","\u001b[0;31mPyomoException\u001b[0m: Cannot convert non-constant Pyomo expression (0  <  x[0]) to bool.\nThis error is usually caused by using a Var, unit, or mutable Param in a\nBoolean context such as an \"if\" statement, or when checking container\nmembership or equality. For example,\n    >>> m.x = Var()\n    >>> if m.x >= 1:\n    ...     pass\nand\n    >>> m.y = Var()\n    >>> if m.y in [m.x, m.y]:\n    ...     pass\nwould both cause this exception."]}]}]}