{"cells":[{"cell_type":"markdown","source":["#Set-Up"],"metadata":{"id":"hL77L3Uei59o"}},{"cell_type":"code","source":["#Copy-and-paste the code below to use as \"set-up\" when your optimization model uses Pyomo. \n","#Uncomment the appropriate solver that you need.\n","#for reference, see https://colab.research.google.com/drive/1yGk8RB5NXrcx9f1Tb-oCiWzbxh61hZLI?usp=sharing\n","\n","#installing and importing pyomo\n","!pip install -q pyomo\n","from pyomo.environ import *\n","\n","###installing and importing specific solvers (uncomment the one(s) you need)\n","###glpk\n","!apt-get install -y -qq glpk-utils\n","###cbc\n","#!apt-get install -y -qq coinor-cbc\n","###ipopt\n","#!wget -N -q \"https://ampl.com/dl/open/ipopt/ipopt-linux64.zip\"\n","#!unzip -o -q ipopt-linux64\n","###bonmin\n","#!wget -N -q \"https://ampl.com/dl/open/bonmin/bonmin-linux64.zip\"\n","#!unzip -o -q bonmin-linux64\n","###couenne\n","#!wget -N -q \"https://ampl.com/dl/open/couenne/couenne-linux64.zip\"\n","#!unzip -o -q couenne-linux64\n","###geocode\n","#!wget -N -q \"https://ampl.com/dl/open/gecode/gecode-linux64.zip\"\n","#!unzip -o -q gecode-linux64\n","\n","#Using the solvers:\n","#SolverFactory('glpk', executable='/usr/bin/glpsol')\n","#SolverFactory('cbc', executable='/usr/bin/cbc')\n","#SolverFactory('ipopt', executable='/content/ipopt')\n","#SolverFactory('bonmin', executable='/content/bonmin')\n","#SolverFactory('couenne', executable='/content/couenne')\n","#SolverFactory('gecode', executable='/content/gecode')"],"metadata":{"id":"T3OEUrcJgiSR","executionInfo":{"status":"ok","timestamp":1670116657468,"user_tz":360,"elapsed":5870,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"_K_6BvFXF9w5","executionInfo":{"status":"ok","timestamp":1670116657469,"user_tz":360,"elapsed":26,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":77,"outputs":[]},{"cell_type":"markdown","source":["#Code that solves one instance of the Markdown Pricing Problem"],"metadata":{"id":"YzvrlozQF1fC"}},{"cell_type":"code","source":["# load in data\n","df = pd.read_excel(\"MP_scenarios.xlsx\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":485},"id":"V8hAoHKSYCBd","executionInfo":{"status":"ok","timestamp":1670116657470,"user_tz":360,"elapsed":26,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"432284c3-07af-4bd9-b4b4-4eea597c2464"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      No  Price  Demand (0% discount)  Demand (15% discount)  \\\n","0      1  55.48                   120                    160   \n","1      2  53.68                   115                    149   \n","2      3  61.56                   140                    191   \n","3      4  65.72                   115                    151   \n","4      5  64.98                   120                    173   \n","..   ...    ...                   ...                    ...   \n","195  196  58.18                   105                    152   \n","196  197  58.58                   125                    169   \n","197  198  50.18                   145                    218   \n","198  199  59.58                   140                    185   \n","199  200  64.56                   135                    182   \n","\n","     Demand (30% discount)  Demand (50% discount)  Weeks Left  \\\n","0                      194                    223          15   \n","1                      171                    197          15   \n","2                      207                    459          15   \n","3                      242                    278          15   \n","4                      221                    335          15   \n","..                     ...                    ...         ...   \n","195                    160                    454          15   \n","196                    177                    298          15   \n","197                    263                    362          15   \n","198                    224                    292          15   \n","199                    191                    315          15   \n","\n","     Inventory Remaining  Salvage Value  \n","0                   1421         13.870  \n","1                   2396         13.420  \n","2                   2544         15.390  \n","3                   1316         16.430  \n","4                   1377         16.245  \n","..                   ...            ...  \n","195                 2320         14.545  \n","196                 1465         14.645  \n","197                 1433         12.545  \n","198                 1355         14.895  \n","199                 2595         16.140  \n","\n","[200 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-ae4a5fe4-1c6a-4ed5-907f-3a1a5af79196\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No</th>\n","      <th>Price</th>\n","      <th>Demand (0% discount)</th>\n","      <th>Demand (15% discount)</th>\n","      <th>Demand (30% discount)</th>\n","      <th>Demand (50% discount)</th>\n","      <th>Weeks Left</th>\n","      <th>Inventory Remaining</th>\n","      <th>Salvage Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>55.48</td>\n","      <td>120</td>\n","      <td>160</td>\n","      <td>194</td>\n","      <td>223</td>\n","      <td>15</td>\n","      <td>1421</td>\n","      <td>13.870</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>53.68</td>\n","      <td>115</td>\n","      <td>149</td>\n","      <td>171</td>\n","      <td>197</td>\n","      <td>15</td>\n","      <td>2396</td>\n","      <td>13.420</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>61.56</td>\n","      <td>140</td>\n","      <td>191</td>\n","      <td>207</td>\n","      <td>459</td>\n","      <td>15</td>\n","      <td>2544</td>\n","      <td>15.390</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>65.72</td>\n","      <td>115</td>\n","      <td>151</td>\n","      <td>242</td>\n","      <td>278</td>\n","      <td>15</td>\n","      <td>1316</td>\n","      <td>16.430</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>64.98</td>\n","      <td>120</td>\n","      <td>173</td>\n","      <td>221</td>\n","      <td>335</td>\n","      <td>15</td>\n","      <td>1377</td>\n","      <td>16.245</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>196</td>\n","      <td>58.18</td>\n","      <td>105</td>\n","      <td>152</td>\n","      <td>160</td>\n","      <td>454</td>\n","      <td>15</td>\n","      <td>2320</td>\n","      <td>14.545</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>197</td>\n","      <td>58.58</td>\n","      <td>125</td>\n","      <td>169</td>\n","      <td>177</td>\n","      <td>298</td>\n","      <td>15</td>\n","      <td>1465</td>\n","      <td>14.645</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>198</td>\n","      <td>50.18</td>\n","      <td>145</td>\n","      <td>218</td>\n","      <td>263</td>\n","      <td>362</td>\n","      <td>15</td>\n","      <td>1433</td>\n","      <td>12.545</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>199</td>\n","      <td>59.58</td>\n","      <td>140</td>\n","      <td>185</td>\n","      <td>224</td>\n","      <td>292</td>\n","      <td>15</td>\n","      <td>1355</td>\n","      <td>14.895</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>200</td>\n","      <td>64.56</td>\n","      <td>135</td>\n","      <td>182</td>\n","      <td>191</td>\n","      <td>315</td>\n","      <td>15</td>\n","      <td>2595</td>\n","      <td>16.140</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae4a5fe4-1c6a-4ed5-907f-3a1a5af79196')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ae4a5fe4-1c6a-4ed5-907f-3a1a5af79196 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ae4a5fe4-1c6a-4ed5-907f-3a1a5af79196');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["#inputs\n","list_price = 55.48 #undiscounted price\n","demand = [120, 160, 194, 223] #for 0%, 15%, 30%, 50% discounts, respectively\n","weeksleft = 15 #current # of weeks left in the selling season\n","inv = 1421 #current amount of inventory left\n","sal = 13.87 #salvage value per unit\n"],"metadata":{"id":"y7JkGZ2vGnGO","executionInfo":{"status":"ok","timestamp":1670116657471,"user_tz":360,"elapsed":25,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["#calculate discounted prices\n","price = [list_price, list_price*(1-.15),list_price*(1-.3), list_price*(1-.5)] #for 0%, 15%, 30%, 50% discounts, respectively\n","\n","#defining the optimization model\n","model = ConcreteModel()\n","model.x = Var(range(4), domain=NonNegativeReals)\n","model.Objective = Objective(expr = sum(demand[i]*model.x[i]*(price[i]-sal) for i in range(4)) + sal*inv, sense=maximize)\n","model.InvConstraint = Constraint(expr = sum(demand[i]*model.x[i] for i in range(4)) <= inv)\n","model.WeeksConstraint = Constraint(expr = sum(model.x[i] for i in range(4)) <= weeksleft)\n","model.pprint()"],"metadata":{"id":"XZo96wpBG9yV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#solving\n","opt = SolverFactory('glpk')\n","opt.solve(model, tee=True)"],"metadata":{"id":"AdPT3_yWHEQk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#print results\n","print('optimal scheduled time at each price level over the remaining weeks: ', (model.x[0](), model.x[1](), model.x[2](), model.x[3]()))\n","print('projected optimal total revenue: ', model.Objective())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1uaRy7TNIveq","executionInfo":{"status":"ok","timestamp":1670116657829,"user_tz":360,"elapsed":373,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"60a61f0b-9dea-43c2-aecf-a0fcfe2fb868"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["optimal scheduled time at each price level over the remaining weeks:  (11.8416666666667, 0.0, 0.0, 0.0)\n","projected optimal total revenue:  78837.08000000016\n"]}]},{"cell_type":"code","source":["# convert above code into function that returns optimized pricing plan and objectives\n","def problemsolve(list_price, demand, weeksleft, inv, sal):\n","  #calculate discounted prices\n","  price = [list_price, list_price*(1-.15),list_price*(1-.3), list_price*(1-.5)]\n","  #defining the optimization model\n","  model = ConcreteModel()\n","  model.x = Var(range(4), domain=NonNegativeReals)\n","  model.Objective = Objective(expr = sum(demand[i]*model.x[i]*(price[i]-sal) for i in range(4)) + sal*inv, sense=maximize)\n","  model.InvConstraint = Constraint(expr = sum(demand[i]*model.x[i] for i in range(4)) <= inv)\n","  model.WeeksConstraint = Constraint(expr = sum(model.x[i] for i in range(4)) <= weeksleft)\n","  model.pprint()\n","  \n","  #solving\n","  opt = SolverFactory('glpk')\n","  opt.solve(model, tee=False)\n","\n","  #print results\n","  return{\"x0*\": model.x[0](), \"x1*\": model.x[1](), \"x2*\":model.x[2](), \"x3*\":model.x[3](), \"Obj*\":model.Objective()}"],"metadata":{"id":"d55D_5yOZeSb","executionInfo":{"status":"ok","timestamp":1670116965333,"user_tz":360,"elapsed":4,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["# try out the function\n","problemsolve(55.48, [120,160,194,223], 15, 1421, 13.87)\n"],"metadata":{"id":"zb4yHtM7pfSh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Looping solveproblem function for all the data"],"metadata":{"id":"hpqHbV6Ya8zh"}},{"cell_type":"code","source":["row_data = df.iloc[0].values.tolist()\n","row_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"coX80NBYbA-W","executionInfo":{"status":"ok","timestamp":1670116971155,"user_tz":360,"elapsed":260,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"9e5952a6-10fc-43e0-aaf7-73d9e3e9d8a9"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.0, 55.48, 120.0, 160.0, 194.0, 223.0, 15.0, 1421.0, 13.87]"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["list_price = row_data[1]\n","demand = row_data[2:6]\n","weeksleft = row_data[6]\n","inv = row_data[7]\n","sal = row_data[8]\n"],"metadata":{"id":"GQ3zLzUxbVVS","executionInfo":{"status":"ok","timestamp":1670116972080,"user_tz":360,"elapsed":2,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["# use a for loop to return all the processes in the excel file to solve all the problems\n","solutions = []\n","for i in range(len(df)):\n","  row_data = df.iloc[i].values.tolist()\n","  list_price = row_data[1]\n","  demand = row_data[2:6]\n","  weeksleft = row_data[6]\n","  inv = row_data[7]\n","  sal = row_data[8]\n","  solutions.append(problemsolve(list_price, demand, weeksleft, inv, sal))\n"],"metadata":{"id":"Vwo0XgOncx6U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["revenue = [d['Obj*'] for d in solutions] \n","revenue"],"metadata":{"id":"y9prK4pnu29a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[\"Solutions\"] = solutions\n","df[\"Project Revenue\"] = revenue\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":832},"id":"1Vej7oNg0Ajp","executionInfo":{"status":"ok","timestamp":1670118414832,"user_tz":360,"elapsed":461,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}},"outputId":"74a832a6-424a-4b74-d8ec-ea08f9586f58"},"execution_count":127,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      No  Price  Demand (0% discount)  Demand (15% discount)  \\\n","0      1  55.48                   120                    160   \n","1      2  53.68                   115                    149   \n","2      3  61.56                   140                    191   \n","3      4  65.72                   115                    151   \n","4      5  64.98                   120                    173   \n","..   ...    ...                   ...                    ...   \n","195  196  58.18                   105                    152   \n","196  197  58.58                   125                    169   \n","197  198  50.18                   145                    218   \n","198  199  59.58                   140                    185   \n","199  200  64.56                   135                    182   \n","\n","     Demand (30% discount)  Demand (50% discount)  Weeks Left  \\\n","0                      194                    223          15   \n","1                      171                    197          15   \n","2                      207                    459          15   \n","3                      242                    278          15   \n","4                      221                    335          15   \n","..                     ...                    ...         ...   \n","195                    160                    454          15   \n","196                    177                    298          15   \n","197                    263                    362          15   \n","198                    224                    292          15   \n","199                    191                    315          15   \n","\n","     Inventory Remaining  Salvage Value  \\\n","0                   1421         13.870   \n","1                   2396         13.420   \n","2                   2544         15.390   \n","3                   1316         16.430   \n","4                   1377         16.245   \n","..                   ...            ...   \n","195                 2320         14.545   \n","196                 1465         14.645   \n","197                 1433         12.545   \n","198                 1355         14.895   \n","199                 2595         16.140   \n","\n","                                             Solutions  Project Revenue  \n","0    {'x0*': 11.8416666666667, 'x1*': 0.0, 'x2*': 0...     78837.080000  \n","1    {'x0*': 0.0, 'x1*': 15.0, 'x2*': 0.0, 'x3*': 0...    104139.200000  \n","2    {'x0*': 6.29411764705882, 'x1*': 8.70588235294...    141254.127529  \n","3    {'x0*': 11.4434782608696, 'x1*': 0.0, 'x2*': 0...     86487.520000  \n","4    {'x0*': 11.475, 'x1*': 0.0, 'x2*': 0.0, 'x3*':...     89477.460000  \n","..                                                 ...              ...  \n","195  {'x0*': 0.0, 'x1*': 14.8675496688742, 'x2*': 0...    113506.482914  \n","196  {'x0*': 11.72, 'x1*': 0.0, 'x2*': 0.0, 'x3*': ...     85819.700000  \n","197  {'x0*': 9.88275862068966, 'x1*': 0.0, 'x2*': 0...     71907.940000  \n","198  {'x0*': 9.67857142857143, 'x1*': 0.0, 'x2*': 0...     80730.900000  \n","199  {'x0*': 2.87234042553191, 'x1*': 12.1276595744...    146158.345532  \n","\n","[200 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-1394b616-c5da-420e-a226-485fd36db76a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No</th>\n","      <th>Price</th>\n","      <th>Demand (0% discount)</th>\n","      <th>Demand (15% discount)</th>\n","      <th>Demand (30% discount)</th>\n","      <th>Demand (50% discount)</th>\n","      <th>Weeks Left</th>\n","      <th>Inventory Remaining</th>\n","      <th>Salvage Value</th>\n","      <th>Solutions</th>\n","      <th>Project Revenue</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>55.48</td>\n","      <td>120</td>\n","      <td>160</td>\n","      <td>194</td>\n","      <td>223</td>\n","      <td>15</td>\n","      <td>1421</td>\n","      <td>13.870</td>\n","      <td>{'x0*': 11.8416666666667, 'x1*': 0.0, 'x2*': 0...</td>\n","      <td>78837.080000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>53.68</td>\n","      <td>115</td>\n","      <td>149</td>\n","      <td>171</td>\n","      <td>197</td>\n","      <td>15</td>\n","      <td>2396</td>\n","      <td>13.420</td>\n","      <td>{'x0*': 0.0, 'x1*': 15.0, 'x2*': 0.0, 'x3*': 0...</td>\n","      <td>104139.200000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>61.56</td>\n","      <td>140</td>\n","      <td>191</td>\n","      <td>207</td>\n","      <td>459</td>\n","      <td>15</td>\n","      <td>2544</td>\n","      <td>15.390</td>\n","      <td>{'x0*': 6.29411764705882, 'x1*': 8.70588235294...</td>\n","      <td>141254.127529</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>65.72</td>\n","      <td>115</td>\n","      <td>151</td>\n","      <td>242</td>\n","      <td>278</td>\n","      <td>15</td>\n","      <td>1316</td>\n","      <td>16.430</td>\n","      <td>{'x0*': 11.4434782608696, 'x1*': 0.0, 'x2*': 0...</td>\n","      <td>86487.520000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>64.98</td>\n","      <td>120</td>\n","      <td>173</td>\n","      <td>221</td>\n","      <td>335</td>\n","      <td>15</td>\n","      <td>1377</td>\n","      <td>16.245</td>\n","      <td>{'x0*': 11.475, 'x1*': 0.0, 'x2*': 0.0, 'x3*':...</td>\n","      <td>89477.460000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>196</td>\n","      <td>58.18</td>\n","      <td>105</td>\n","      <td>152</td>\n","      <td>160</td>\n","      <td>454</td>\n","      <td>15</td>\n","      <td>2320</td>\n","      <td>14.545</td>\n","      <td>{'x0*': 0.0, 'x1*': 14.8675496688742, 'x2*': 0...</td>\n","      <td>113506.482914</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>197</td>\n","      <td>58.58</td>\n","      <td>125</td>\n","      <td>169</td>\n","      <td>177</td>\n","      <td>298</td>\n","      <td>15</td>\n","      <td>1465</td>\n","      <td>14.645</td>\n","      <td>{'x0*': 11.72, 'x1*': 0.0, 'x2*': 0.0, 'x3*': ...</td>\n","      <td>85819.700000</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>198</td>\n","      <td>50.18</td>\n","      <td>145</td>\n","      <td>218</td>\n","      <td>263</td>\n","      <td>362</td>\n","      <td>15</td>\n","      <td>1433</td>\n","      <td>12.545</td>\n","      <td>{'x0*': 9.88275862068966, 'x1*': 0.0, 'x2*': 0...</td>\n","      <td>71907.940000</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>199</td>\n","      <td>59.58</td>\n","      <td>140</td>\n","      <td>185</td>\n","      <td>224</td>\n","      <td>292</td>\n","      <td>15</td>\n","      <td>1355</td>\n","      <td>14.895</td>\n","      <td>{'x0*': 9.67857142857143, 'x1*': 0.0, 'x2*': 0...</td>\n","      <td>80730.900000</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>200</td>\n","      <td>64.56</td>\n","      <td>135</td>\n","      <td>182</td>\n","      <td>191</td>\n","      <td>315</td>\n","      <td>15</td>\n","      <td>2595</td>\n","      <td>16.140</td>\n","      <td>{'x0*': 2.87234042553191, 'x1*': 12.1276595744...</td>\n","      <td>146158.345532</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1394b616-c5da-420e-a226-485fd36db76a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1394b616-c5da-420e-a226-485fd36db76a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1394b616-c5da-420e-a226-485fd36db76a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["# export dataframe as csv file with solutions\n","df.to_csv(\"P2_Optimization_Solution.csv\")"],"metadata":{"id":"POow0K_xihao","executionInfo":{"status":"ok","timestamp":1670118421291,"user_tz":360,"elapsed":360,"user":{"displayName":"Brecht Van Buggenhout","userId":"04187530947306155552"}}},"execution_count":128,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"provenance":[{"file_id":"1a4XWYsO-WOmDnDKx3BaJvbGvc2PhwDJq","timestamp":1670094240227},{"file_id":"1qAzqH4GAeh7gI89fpSIs2rQsyKtnm9OR","timestamp":1668529367708}]}},"nbformat":4,"nbformat_minor":0}